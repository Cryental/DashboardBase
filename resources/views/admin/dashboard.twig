{% extends "layout.admin" %}

{% block title %}Central Dashboard{% endblock %}

{% block included_scripts %}
    <script src="/libs/apexcharts/dist/apexcharts.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => getUsersInitialChartsData());

        function getUsersInitialChartsData() {
            fetch(`/admin/users-stats?period=7`)
                .then(response => response.json())
                .then(usersData => {
                    const dates = usersData['distribution'].map(user => user.date);
                    const counts = usersData['distribution'].map(user => user.count);

                    new ApexCharts(document.getElementById('chart-users-bg'), {
                        chart: {
                            id: 'users_chart',
                            type: "area",
                            fontFamily: 'inherit',
                            height: 40.0,
                            sparkline: {
                                enabled: true
                            },
                            animations: {
                                enabled: false
                            },
                        },
                        dataLabels: {
                            enabled: false,
                        },
                        fill: {
                            opacity: .16,
                            type: 'solid'
                        },
                        stroke: {
                            width: 2,
                            lineCap: "round",
                            curve: "smooth",
                        },
                        series: [{
                            name: "Users",
                            data: counts
                        }],
                        tooltip: {
                            theme: 'dark'
                        },
                        grid: {
                            strokeDashArray: 4,
                        },
                        xaxis: {
                            labels: {
                                padding: 0,
                            },
                            tooltip: {
                                enabled: false
                            },
                            axisBorder: {
                                show: false,
                            },
                            type: 'datetime',
                        },
                        yaxis: {
                            tickAmount: 4,
                            labels: {
                                padding: 4,
                                formatter: (value) => {
                                    return parseInt(value);
                                }
                            },
                        },
                        labels: dates,
                        colors: [tabler.getColor("primary")],
                        legend: {
                            show: false,
                        },
                    }).render();
                    updateUsersIcon(usersData['percentage_growth']);
                });
        }

        function updateUsersChartsData(period, text) {
            fetch(`/admin/users-stats?period=${period}`)
                .then(response => response.json())
                .then(usersData => {
                    const dates = usersData['distribution'].map(user => user.date);
                    const counts = usersData['distribution'].map(user => user.count);

                    ApexCharts.exec('users_chart', 'updateOptions', {
                        labels: dates,
                        series: [{
                            name: "Users",
                            data: counts
                        }],
                    }, false, true);

                    updateUsersIcon(usersData['percentage_growth']);

                    document.getElementById("user-stats-period").innerHTML = text;
                });

        }

        function updateUsersIcon(percentage) {
            let data = null;
            if (percentage > 0) {
                data = `
<div class="d-flex flex-row align-items-center" style="color: green">
    <div>${percentage}%</div>
    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trending-up" width="24"
                        height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none"
                        stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M3 17l6 -6l4 4l8 -8"></path>
                <path d="M14 7l7 0l0 7"></path>
            </svg>
</div>`
            } else {
                data = `
<div class="d-flex flex-row align-items-center" style="color: red">
    <div>${percentage}%</div>
    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-trending-down" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
        <path d="M3 7l6 6l4 -4l8 8"></path>
        <path d="M21 10l0 7l-7 0"></path>
    </svg>
</div>`
            }

            $('#icon-container').html(data);
        }
    </script>
{% endblock %}

{% block content %}
    <div class="page-header d-print-none text-white">
        <div class="container-xl">
            <div class="row g-2 align-items-center">
                <div class="col">
                    <!-- Page pre-title -->
                    <div class="page-pretitle">
                        Admin
                    </div>
                    <h2 class="page-title">
                        Welcome, {{ auth_user().name }}!
                    </h2>
                </div>
            </div>
        </div>
    </div>
    <div class="page-body">
        <div class="container-xl">
            <div class="row row-deck row-cards">
                <div class="col-sm-6 col-lg-4">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="subheader">Users</div>
                                <div class="ms-auto lh-1">
                                    <div class="dropdown">
                                        <a class="dropdown-toggle text-muted" href="#" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="user-stats-period">Last 7 days</a>
                                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="user-stats-period">
                                            <a class="dropdown-item" href="#" onclick="updateUsersChartsData(7, 'Last 7 days')">Last 7 days</a>
                                            <a class="dropdown-item" href="#" onclick="updateUsersChartsData(30, 'Last 30 days')">Last 30 days</a>
                                            <a class="dropdown-item" href="#" onclick="updateUsersChartsData(90, 'Last 3 months')">Last 3 months</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-baseline">
                                <div class="h1 mb-0 me-2">{{ userCount }}</div>
                                <div id="icon-container me-auto">

                                </div>
                            </div>
                        </div>
                        <div id="chart-users-bg" class="chart-sm" style="min-height: 40px;">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-4">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="font-weight-medium">Patients</div>
                            </div>
                            <div class="d-flex align-items-baseline">
                                <div class="h1 mb-0 me-2">0</div>
                                <small>This day</small>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-4">
                    <div class="card">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="font-weight-medium">Sales</div>
                            </div>
                            <div class="d-flex align-items-baseline">
                                <div class="h1 mb-0 me-2">0</div>
                                <small>This day</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
